// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Character.h"
#include "TPSProjectile.h"
#include "TPSCharacter.generated.h"

class UCameraComponent;
class USkeletalMeshComponent;

UCLASS()
class tpsdemo_API ATPSCharacter : public ACharacter
{
	GENERATED_BODY()

public:
	// Sets default values for this character's properties
	ATPSCharacter();

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

	// 要生成的发射物类
	UPROPERTY(EditDefaultsOnly, Category = Projectile)
		TSubclassOf<class ATPSProjectile> ProjectileClass;

public:
	// Called every frame
	virtual void Tick(float DeltaTime) override;

	// Called to bind functionality to input
	virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override;

	// 处理用于前后移动的输入
	UFUNCTION()
		void MoveForward(float Value);

	// 处理用于左右移动的输入
	UFUNCTION()
		void MoveRight(float Value);

	// 按下键时，设置跳跃标记
	UFUNCTION()
		void StartJump();

	// 释放键时，清除跳跃标记
	UFUNCTION()
		void StopJump();

	// 处理发射物射击的函数
	UFUNCTION()
		void Fire();

	//摄像机
	UPROPERTY(VisibleAnywhere)
		UCameraComponent* TPSCameraComponent;

	// 枪口相对于摄像机位置的偏移
	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Gameplay)
		FVector MuzzleOffset;
};
